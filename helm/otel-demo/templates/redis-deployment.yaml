{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otel-demo.fullname" . }}-redis
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "otel-demo.redis.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      {{- include "otel-demo.redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "otel-demo.redis.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.global.securityContext | nindent 8 }}
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 999
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            {{- if .Values.redis.config }}
            - name: config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
              readOnly: true
            {{- end }}
          {{- if .Values.redis.config }}
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
          {{- end }}
      volumes:
        - name: data
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "otel-demo.fullname" . }}-redis-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
        {{- if .Values.redis.config }}
        - name: config
          configMap:
            name: {{ include "otel-demo.fullname" . }}-redis-config
        {{- end }}
      restartPolicy: Always
{{- end }}
